import React,{useState,useEffect} from 'react'
import { DataGrid, GridColDef, GridValueGetterParams,GridRowParams  } from '@mui/x-data-grid';
import {Grid} from '@mui/material'
import axios from 'axios'

const columns: GridColDef[] = [
  { field: 'id', headerName: 'Product', width: 160 },
  { field: 'Tags', headerName: 'Tags', width: 110 },
  {
    field: 'Energy',
    headerName: 'Energy',
    type: 'number',
    width: 90,
  },
  {
    field: 'Protein',
    headerName: 'Protein',
    type: 'number',
    width: 90,
  },
  {
    field: 'Fat',
    headerName: 'Fat',
    type: 'number',
    width: 90,
  },
  {
    field: 'Carbohydrate',
    headerName: 'Carbohydrate',
    type: 'number',
    width: 90,
  },
  {
    field: 'Sugar',
    headerName: 'Sugar',
    type: 'number',
    width: 90,
  },
  {
    field: 'dietaryFibre',
    headerName: 'dietaryFibre',
    type: 'number',
    width: 90,
  },
  {
    field: 'sodium',
    headerName: 'sodium',
    type: 'number',
    width: 90,
  },
  {
    field: 'potassium',
    headerName: 'potassium',
    type: 'number',
    width: 90,
  }
  ,
  {
    field: 'calcium',
    headerName: 'calcium',
    type: 'number',
    width: 90,
  }
  ,
  {
    field: 'vitamin-e',
    headerName: 'vitamin-e',
    type: 'number',
    width: 90,
  }
];
const ProductsTable: React.FC = () => {
  const [select, setSelection] = useState([]);
  const [products, setproducts] = useState([])
  const [productname, setproductname] = useState([])
  const [selectedproducts, setselectedproducts] = useState([])
  const [Selectedproductsdata, setSelectedproductsdata] = useState([])
  const [checkboxSelection, setcheckboxSelection] = useState(true)
  useEffect(() => {
    var productdata=[]
    var productnamedata=[]
    axios.get("http://localhost:3000/api/products").then(res=>{
      setproducts(res.data)
      res.data.map(data=>{
        var item={id:data.name,Tags:data.tags,Energy:data.nutrition.energy,Protein:data.nutrition.protein,Fat:data.nutrition.fat,Carbohydrate:data.nutrition.carbohydrate,Sugar:data.nutrition.sugar,dietaryFibre:data.nutrition.dietaryFibre,sodium:data.nutrition.sodium,potassium:data.nutrition.potassium,calcium:data.nutrition.calcium,"vitamin-e":data.nutrition["vitamin-e"]}
        productnamedata.push(data.name)
        productdata.push(item)
      })
      setproductname(productnamedata)
      setselectedproducts(productnamedata)
      setproducts(productdata)
    })
  }, [])
  const backgroundcolordata=(data1,data2)=>{
    console.log(data1,data2)
    if(data1>data2){
      return "blue"
    }
    if(data1<data2){
      return "red"
    }
    if(data2==undefined){
       return "white"
    }
    else return "yellow"
  }
  
  // TODO Feature 1: Display products in a rich text table
  // TODO Feature 2: Compare two products
  return <div>
      <div style={{ height: '80px', width: '1260px',background:"grey",color:"black"}}><Grid container spacing={2}>
      <Grid item xs={.5}>
   #
  </Grid>
  <Grid item xs={1.5}>
   {Selectedproductsdata[0]!=undefined?<><h4 style={{marginTop:"-11px"}}>{Selectedproductsdata[0].id}</h4><h4>{Selectedproductsdata[1].id}</h4></>:<></>}
  </Grid>
  <Grid item xs={1.5}>
  {Selectedproductsdata[0]!=undefined?<><h4 style={{marginTop:"-11px"}}>{Selectedproductsdata[0].Tags}</h4><h4>{Selectedproductsdata[1].Tags}</h4></>:<></>}
  </Grid>
  <Grid item xs={.7}>
  {Selectedproductsdata[0]!=undefined?<><h4  style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[0].Energy,Selectedproductsdata[1].Energy),textAlign:"center"}}>{Selectedproductsdata[0].Energy}</h4 ><h4 style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[1].Energy,Selectedproductsdata[0].Energy),textAlign:"center"}}>{Selectedproductsdata[1].Energy}</h4></>:<></>}
  </Grid>
  <Grid item xs={.7}>
  {Selectedproductsdata[0]!=undefined?<><h4  style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[0].Protein,Selectedproductsdata[1].Protein),textAlign:"center"}}>{Selectedproductsdata[0].Protein}</h4><h4 style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[1].Protein,Selectedproductsdata[0].Protein),textAlign:"center"}}>{Selectedproductsdata[1].Protein}</h4></>:<></>}
  </Grid>
  <Grid item xs={.8}>
  {Selectedproductsdata[0]!=undefined?<><h4  style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[0].Fat,Selectedproductsdata[1].Fat),textAlign:"center"}}>{Selectedproductsdata[0].Fat}</h4><h4 style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[1].Fat,Selectedproductsdata[0].Fat),textAlign:"center"}}>{Selectedproductsdata[1].Fat}</h4></>:<></>}
  </Grid>
  <Grid item xs={.8}>
  {Selectedproductsdata[0]!=undefined?<><h4  style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[0].Carbohydrate,Selectedproductsdata[1].Carbohydrate),textAlign:"center"}}>{Selectedproductsdata[0].Carbohydrate}</h4><h4 style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[1].Carbohydrate,Selectedproductsdata[0].Carbohydrate),textAlign:"center"}}>{Selectedproductsdata[1].Carbohydrate}</h4></>:<></>}
  </Grid>
  <Grid item xs={1}>
  {Selectedproductsdata[0]!=undefined?<><h4  style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[0].Sugar,Selectedproductsdata[1].Sugar),textAlign:"center"}}>{Selectedproductsdata[0].Sugar}</h4><h4 style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[1].Sugar,Selectedproductsdata[0].Sugar),textAlign:"center"}}>{Selectedproductsdata[1].Sugat}</h4></>:<></>}
  </Grid>
  <Grid item xs={1}>
  {Selectedproductsdata[0]!=undefined?<><h4  style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[0].dietaryFibre,Selectedproductsdata[1].dietaryFibre),textAlign:"center"}}>{Selectedproductsdata[0].dietaryFibre}</h4><h4 style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[1].dietaryFibre,Selectedproductsdata[0].dietaryFibre),textAlign:"center"}}>{Selectedproductsdata[1].dietaryFibre}</h4></>:<></>}
  </Grid>
  <Grid item xs={1}>
  {Selectedproductsdata[0]!=undefined?<><h4  style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[0].sodium,Selectedproductsdata[1].sodium),textAlign:"center"}}>{Selectedproductsdata[0].sodium}</h4><h4 style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[1].sodium,Selectedproductsdata[0].sodium),textAlign:"center"}}>{Selectedproductsdata[1].sodium}</h4></>:<></>}
  </Grid>
  <Grid item xs={1}>
  {Selectedproductsdata[0]!=undefined?<><h4  style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[0].potassium,Selectedproductsdata[1].potassium),textAlign:"center"}}>{Selectedproductsdata[0].potassium}</h4><h4 style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[1].potassium,Selectedproductsdata[0].potassium),textAlign:"center"}}>{Selectedproductsdata[1].potassium}</h4></>:<></>}
  </Grid>
  <Grid item xs={1}>
  {Selectedproductsdata[0]!=undefined?<><h4  style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[0].calcium,Selectedproductsdata[1].calcium),textAlign:"center"}}>{Selectedproductsdata[0].calcium}</h4><h4 style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[1].calcium,Selectedproductsdata[0].calcium),textAlign:"center"}}>{Selectedproductsdata[1].calcium}</h4></>:<></>}
  </Grid>
  <Grid item xs={.5}>
  {Selectedproductsdata[0]!=undefined?<><h4  style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[0]["vitamin-e"],Selectedproductsdata[1]["vitamin-e"]),textAlign:"center"}}>{Selectedproductsdata[0]["vitamin-e"]}</h4><h4 style={{marginTop:"-11px",backgroundColor:backgroundcolordata(Selectedproductsdata[1]["vitamin-e"],Selectedproductsdata[0]["vitamin-e"]),textAlign:"center"}}>{Selectedproductsdata[1]["vitamin-e"]}</h4></>:<></>}
  </Grid>
</Grid></div>
    <div style={{ height: 400, width: '1260px',background:"white" }}>
      <DataGrid
        rows={products}
        columns={columns}
        pageSize={7}
        rowsPerPageOptions={[5]}
        sx={{
          boxShadow: 2,
          border: 2,
          borderColor: 'primary.light',
          '& .MuiDataGrid-cell:hover': {
            color: 'primary.dark',
          },
        }}
        onSelectionModelChange={(newSelection) => {
          if(newSelection.length<2){
            setselectedproducts(productname)
            setSelection(newSelection);
            setSelectedproductsdata([])
          }
          else{
            var datadata=[]
            datadata=(products.filter(function(data){
              return newSelection.indexOf(data.id)!==-1
            }))
            console.log(datadata)
            setSelectedproductsdata(datadata)
            setselectedproducts(newSelection)
          }
      }}
      isRowSelectable={(params: GridRowParams) => selectedproducts.indexOf(params.row.id)!==-1}
      checkboxSelection={checkboxSelection}
      />
    </div>
    </div>
}

export default ProductsTable






